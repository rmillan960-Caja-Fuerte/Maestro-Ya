rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner() {
      return exists(/databases/$(database)/documents/roles_owner/$(request.auth.uid));
    }

    function isAdmin() {
      return exists(/databases/$(database)/documents/roles_admin/$(request.auth.uid));
    }

    match /users/{userId} {
      // Un usuario puede crear su propio perfil.
      allow create: if request.auth.uid == userId;
      // Un usuario puede leer su propio perfil.
      allow read: if request.auth.uid == userId || isOwner() || isAdmin();
      // Los dueños o administradores pueden leer la lista de todos los usuarios.
      allow list: if isOwner() || isAdmin();
      // Un usuario puede actualizar su propio perfil.
      allow update: if request.auth.uid == userId;
      // Solo un owner puede eliminar usuarios (por seguridad).
      allow delete: if isOwner();
    }

    match /roles_owner/{userId} {
      // Solo el servidor (o reglas internas) debe escribir aquí. 
      // Por ahora, lo dejamos abierto para la creación inicial del primer usuario.
      allow read, write: if request.auth != null;
    }

    match /clients/{clientId} {
      // Dueños y admins pueden gestionar clientes.
      allow read, list, create, update, delete: if isOwner() || isAdmin();
    }

    match /serviceRequests/{serviceRequestId} {
      // Dueños y admins pueden gestionar trabajos.
      allow read, list, create, update, delete: if isOwner() || isAdmin();
    }
  }
}
